<script type="text/javascript">
// fetch book information from local Web Service based on ISBN
function check_isbn(event, strValue)
{
  // Call a local Web Service to fetch book information based on its ISBN
  var strURL = "webservice?isbn="+encodeURIComponent(strValue);
  // Lock GUI
  form_lock_gui("#_FORM_NEW_FIELDS");
  var jqxhr = $.ajax(strURL)
  .done(function(data, textStatus, jqXHR) {
    form_unlock_gui("#_FORM_NEW_FIELDS");
    // set focus on first field after "ISBN13": title
    $("#title").focus();
    // TODO Handle multiple results - let the user pick one in a list
    if (data && data.status && data.status == "OK")
    {
      if (data.title)
      {
        var strTitle = data.title
        if (strTitle && strTitle.length > 0)
        {
          $("#title").val(strTitle);
          $("#title").parent().addClass("has-success").removeClass("has-warning has-error");
        }
      }
      if (data.authors)
      {
        var strAuthors = data.authors;
        if (strAuthors && strAuthors.length > 0)
        {
          $("#author").val(strAuthors);
          $("#author").parent().addClass("has-success").removeClass("has-warning has-error");
        }
      }
      if (data.description)
      {
        var strDescription = data.description;
        if (strDescription && strDescription.length > 0)
        {
          $("#description").val(strDescription);
          $("#description").parent().addClass("has-success").removeClass("has-warning has-error");
        }
      }
      if (data.series_title)
      {
        var strSeriesTitle = data.series_title;
        if (strSeriesTitle && strSeriesTitle.length > 0)
        {
          $("#series_title").val(strSeriesTitle);
          $("#series_title").parent().addClass("has-success").removeClass("has-warning has-error");
        }
      }
      // Success
      $("#isbn13").parent().addClass("has-success").removeClass("has-warning has-error");
      $("#isbn13").parent().find(".glyphicon.form-control-feedback").addClass("glyphicon-ok").removeClass("glyphicon-warning-sign glyphicon-remove");
    }
    else
    {
      // Warning
      $("#isbn13").parent().addClass("has-warning").removeClass("has-success has-error");
      $("#isbn13").parent().find(".glyphicon.form-control-feedback").addClass("glyphicon-warning-sign").removeClass("glyphicon-ok glyphicon-remove");
    }
  })
  .fail(function(jqXHR, textStatus, errorThrown) {
    form_unlock_gui("#_FORM_NEW_FIELDS");
    // set focus on first field after "ISBN13": title
    $("#title").focus();
    // Error
    form_control_set_error($("#isbn13"), true /* blnError */);
    $("#isbn13").parent().find(".glyphicon.form-control-feedback").addClass("glyphicon-remove").removeClass("glyphicon-ok glyphicon-warning-sign");
  })
} // function check_isbn(event)

// Bind events and callbacks
$( document ).ready(function() {
  // Bind ISBN search - on focusout
  $('#isbn13').on('focusout',function(event){
    // On n'appelle le Web Service que si le titre et l'auteur n'ont pas déjà été remplis (donc s'ils sont vides)
    if ($('#title').val() == "" && $('#author').val() == "")
    {
      var strValue = $(event.target).val();
      if (strValue && (strValue.length = 10 || strValue.length >= 13))
      {
        event.preventDefault();
        // Format ISBN Number
        strValue = format_isbn(strValue);
        // ReStore normalized value in input control
        $(event.target).val(strValue);
        // Call external Web Service to fetch ISBN
        check_isbn(event, strValue);
      }
    }

  });
});

// Lock GUI
function form_lock_gui(strCSSSelector)
{
  $(strCSSSelector).prop("disabled", true).addClass("disabled");
  $(strCSSSelector).find(".glyphicon.form-control-feedback").addClass("glyphicon-cloud-download");
}
function form_unlock_gui(strCSSSelector)
{
  $(strCSSSelector).prop("disabled", false).removeClass("disabled");
  $(strCSSSelector).find(".glyphicon.form-control-feedback").removeClass("glyphicon-cloud-download");
}

</script>
